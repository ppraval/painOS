//loading module7 from disk
loadi(54, 67);
loadi(55, 68);

// loading idle code from from disk
loadi(69, 11);

SP = 82 * 512;

call BOOT_MODULE;

// since pid for idle = 0
PTBR = PAGE_TABLE_BASE;
PTLR = 10;

//giving pages for idle code
//pages for library
[PTBR + 0] = -1;
[PTBR + 1] = "0000";
[PTBR + 2] = -1;
[PTBR + 3] = "0000";

//pages for heap
[PTBR + 4] = -1;
[PTBR + 5] = "0000";
[PTBR + 6] = -1;
[PTBR + 7] = "0000";

//pages for code
[PTBR + 8] = 69;
[PTBR + 9] = "0100";
[PTBR + 10] = -1;
[PTBR + 11] = "0000";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";

//pages for stack
[PTBR + 16] = 70;
[PTBR + 17] = "0110";
[PTBR + 18] = -1;
[PTBR + 19] = "0000";

//pushing the ip when idle starts to the top of the stack
[70 * 512] = [69 * 512 + 1];

//process table for idle
[PROCESS_TABLE + 1] = 0; //pid
[PROCESS_TABLE + 3] = 0; //userid of kernel
[PROCESS_TABLE + 4] = RUNNING; //state
[PROCESS_TABLE + 11] = 76; //user area page number
[PROCESS_TABLE + 12] = 0; //kernal stack pointer
[PROCESS_TABLE + 13] = 8 * 512; //user stack pointer
[PROCESS_TABLE + 14] = PAGE_TABLE_BASE; //ptbr
[PROCESS_TABLE + 15] = 10; //ptlr

//stack pointer
SP = 8 * 512;

//system status table
[SYSTEM_STATUS_TABLE + 1] = 0; // since pid of idle is 0

ireturn;